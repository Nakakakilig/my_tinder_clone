[project]
name = "my-tinder-clone"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiokafka>=0.12.0",
    "alembic>=1.14.1",
    "asyncpg>=0.30.0",
    "black>=25.1.0",
    "faker>=36.1.1",
    "fastapi>=0.115.9",
    "httpx>=0.28.1",
    "logging>=0.4.9.6",
    "pre-commit>=4.1.0",
    "pydantic-settings>=2.8.1",
    "pytest-asyncio>=0.26.0",
    "redis>=5.2.1",
    "ruff>=0.11.2",
    "sqlalchemy[asyncio]>=2.0.38",
    "uuid>=1.30",
    "uvicorn>=0.34.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "B", "W", "UP", "RUF", "FAST", "ASYNC", "SIM", "RET",  "C4", "A", "PL", "TRY"]
ignore = [
    "TRY301",
    "RUF010",
    "RUF100",
    "RET504",
    "PLR1711",
]

[tool.ruff.lint.per-file-ignores]
"*/alembic/**/*" = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = [
    "application",
    "config",
    "domain",
    "infrastructure",
    "presentation",
    "utils",
    "use_cases",
    "app",
]
known-third-party = [
    "faker",
    "fastapi",
    "httpx",
    "redis",
    "sqlalchemy[asyncio]",
    "uvicorn",
    "logging",
    "uuid",
    "pytest",
]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
split-on-trailing-comma = true
